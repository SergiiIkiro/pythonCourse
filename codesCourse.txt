1. Функции словарей 
 

Вы работаете с данными, которые представляют рейтинг экономической свободы по странам.

Имя и рейтинг каждой страны хранятся в словаре, где ключом является название страны. 

Завершите программу, чтобы принимать имя страны в качестве входных данных и выводить соответствующий рейтинг экономической свободы. 

В случае если указанное название страны отсутствует, выведите "Not found".



data = {
    'Singapore': 1,
    'Ireland': 6,
    'United Kingdom': 7,
    'Germany': 27,
    'Armenia': 34,
    'United States': 17,
    'Canada': 9,
    'Italy': 74
}
a = input()
print(data.get(a,"Not found"))


2. Вам дан список контактов, в котором каждый контакт представлен кортежем с именем и возрастом контакта. 

Завершите программу, чтобы принимать строку в качестве входных данных, искать имя в списке контактов и выводить возраст контакта в формате представленном ниже:

Пример входных данных

John

Пример выходных данных 

John is 31 


contacts = [
    ('James', 42),
    ('Amy', 24),
    ('John', 31),
    ('Amanda', 63),
    ('Bob', 18)
]

def find_age(name):
    for contact in contacts:
        if contact[0] == name:
            return contact[1]
    return None

# Ввод имени
name = input()

# Поиск возраста и вывод результата
age = find_age(name)
if age is not None:
    print(f"{name} is {age}")
else:
    print("Not Found")


word = input()

Принимая слово в качестве входных данных, выведите список, содержащий только те буквы слова, которые не являются гласными.

Гласными являются a, e, i, o, u. 

Пример ввода

awesome

Пример вывода 

['w', 's', 'm'] 

# Определяем гласные буквы
vowels = ['a', 'e', 'i', 'o', 'u']

# Создаем список, содержащий только согласные буквы
consonants = [letter for letter in word if letter.lower() not in vowels]

# Выводим полученный список согласных букв
print(consonants)



Распаковка кортежей 
 

Кортежи могут быть использованы для вывода нескольких значений из функции.

Вам нужно создать функцию под названием calc(), которая примет длину стороны квадрата в качестве аргумента и вернет периметр и площадь, используя кортеж.

Периметр - это сумма всех сторон, а площадь - это квадрат длины стороны.

Пример ввода

3

Пример вывода

Периметр: 12

Площадь: 9

Данный код берет число из пользовательского ввода, передает его в функцию calc(), и использует распаковку для получения возвращаемых значений.


def calc(x):
    #your code goes here
    perimeter = 4 * x  # Периметр квадрата: сумма всех сторон
    area = x ** 2      # Площадь квадрата: квадрат длины стороны
    return perimeter, area

side = int(input())
p, a = calc(side)

print("Perimeter: " + str(p))
print("Area: " + str(a))


Структуры данных 
 

Как мы видели в предыдущих уроках, Python поддерживает следующие типы коллекций: Списки, Словари, Кортежи, Множества.

Когда использовать словарь:
- Когда вам нужна логическая связь между парой ключ:значение.

- Когда вам нужен быстрый поиск ваших данных на основе пользовательского ключа.

- Когда ваши данные постоянно изменяются. Помните, словари являются изменяемыми.

Когда использовать другие типы:
- Используйте списки если у вас есть коллекция данных, которой не нужен случайный доступ. Старайтесь выбирать списки, когда вам нужна простая, итерируемая коллекция, которая часто изменяется.

- Используйте множество, если вам нужна уникальность элементов. 

- Используйте кортежи, когда ваши данные не могут/не должны изменяться.

Многие разы, кортеж используется в сочетании с словарем, например, кортеж может представлять собой ключ, потому что он неизменяем. 